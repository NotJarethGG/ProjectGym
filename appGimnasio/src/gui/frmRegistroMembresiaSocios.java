package gui;

import com.toedter.calendar.JDateChooser;
import connect.Conexion;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import logic.GestionMembresiaSocios;
import logic.GestionMembresias;
import logic.MembresiaSocios;
import logic.Membresias;

public class frmRegistroMembresiaSocios extends javax.swing.JInternalFrame {
    
    GestionMembresiaSocios gestionMembresiaSocios;
    GestionMembresias gestionMembresia;
    MembresiaSocios membresiasocio;
    Membresias membresias;
    
    public frmRegistroMembresiaSocios() {
        initComponents();
        gestionMembresiaSocios = new GestionMembresiaSocios();
        gestionMembresia = new GestionMembresias();
        membresiasocio = null;
        membresias = null;
        listarMembresiasSocios();
        gestionMembresiaSocios.consultarIDMembresias(cmbMembresia);
        gestionMembresiaSocios.consultarIDSocios(cmbSocios);
        limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        winMembreSocios = new javax.swing.JDialog();
        ImageIcon icon = new ImageIcon(getClass().getResource("/img/fondo2.jpg"));
        Image image = icon.getImage();
        jPanel1 = new javax.swing.JPanel()
        {
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }}

            ;
            btnSave = new javax.swing.JButton();
            btnCancelar = new javax.swing.JButton();
            jPanel2 = new javax.swing.JPanel();
            txtDias = new javax.swing.JTextField();
            jLabel5 = new javax.swing.JLabel();
            btnDias = new javax.swing.JButton();
            jLabel6 = new javax.swing.JLabel();
            jLabel1 = new javax.swing.JLabel();
            lblDias = new javax.swing.JLabel();
            txtPeriodo = new javax.swing.JTextField();
            cmbMembresia = new javax.swing.JComboBox<>();
            cmbSocios = new javax.swing.JComboBox<>();
            chkSi = new javax.swing.JRadioButton();
            chkNo = new javax.swing.JRadioButton();
            jLabel2 = new javax.swing.JLabel();
            jcFechaIni = new com.toedter.calendar.JDateChooser();
            jLabel3 = new javax.swing.JLabel();
            jcFechaFin = new com.toedter.calendar.JDateChooser();
            jLabel4 = new javax.swing.JLabel();
            txtPeriodoInfo = new javax.swing.JTextField();
            jLabel7 = new javax.swing.JLabel();
            grupoActivo = new javax.swing.ButtonGroup();
            PopUpmnuMembreSocio = new javax.swing.JPopupMenu();
            popMnuEditar = new javax.swing.JMenuItem();
            popMnuEliminar = new javax.swing.JMenuItem();
            popMnuImprimir = new javax.swing.JMenuItem();
            jSeparator1 = new javax.swing.JPopupMenu.Separator();
            popMnuSalir = new javax.swing.JMenuItem();
            jPanel3 = new javax.swing.JPanel();
            Herramientas = new javax.swing.JToolBar();
            btnGuardar = new javax.swing.JButton();
            btnEditar = new javax.swing.JButton();
            btnEliminar = new javax.swing.JButton();
            btnImprimir = new javax.swing.JButton();
            btnClose = new javax.swing.JButton();
            jScrollPane1 = new javax.swing.JScrollPane();
            tblMembreSocios = new javax.swing.JTable();
            lbTotal = new javax.swing.JLabel();

            jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Membresia Socios Gym", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Leelawadee UI Semilight", 1, 14))); // NOI18N
            jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jPanel1.setFocusable(false);

            btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/agregar-archivo.png"))); // NOI18N
            btnSave.setText("Guardar");
            btnSave.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnSaveActionPerformed(evt);
                }
            });

            btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
            btnCancelar.setText("Cancelar");
            btnCancelar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnCancelarActionPerformed(evt);
                }
            });

            jPanel2.setBackground(new java.awt.Color(123, 113, 108));
            jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
            jPanel2.setFocusable(false);

            txtDias.setEditable(false);
            txtDias.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

            jLabel5.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
            jLabel5.setText("Fecha final:");
            jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jLabel5.setDoubleBuffered(true);
            jLabel5.setFocusable(false);

            btnDias.setFont(new java.awt.Font("Segoe UI Semilight", 1, 12)); // NOI18N
            btnDias.setText("Calcule dias ");
            btnDias.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnDiasActionPerformed(evt);
                }
            });

            jLabel6.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
            jLabel6.setText("Activo:");
            jLabel6.setDoubleBuffered(true);
            jLabel6.setFocusable(false);

            jLabel1.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
            jLabel1.setText("Recuerde: Debe seleccionar las fechas que dependen del tipo de periodo de la membresia ");
            jLabel1.setFocusable(false);

            lblDias.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
            lblDias.setText("Periodo:");
            lblDias.setDoubleBuffered(true);
            lblDias.setFocusable(false);

            txtPeriodo.setEditable(false);
            txtPeriodo.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
            txtPeriodo.setEnabled(false);
            txtPeriodo.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    txtPeriodoKeyPressed(evt);
                }
            });

            cmbMembresia.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
            cmbMembresia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoja una opcion" }));
            cmbMembresia.addItemListener(new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    cmbMembresiaItemStateChanged(evt);
                }
            });
            cmbMembresia.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    cmbMembresiaKeyPressed(evt);
                }
            });

            cmbSocios.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
            cmbSocios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escoja una opcion" }));
            cmbSocios.addItemListener(new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    cmbSociosItemStateChanged(evt);
                }
            });
            cmbSocios.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    cmbSociosKeyPressed(evt);
                }
            });

            grupoActivo.add(chkSi);
            chkSi.setSelected(true);
            chkSi.setText("Si");

            grupoActivo.add(chkNo);
            chkNo.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
            chkNo.setText("No");
            chkNo.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    chkNoActionPerformed(evt);
                }
            });

            jLabel2.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
            jLabel2.setText("ID Membresia:");
            jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jLabel2.setDoubleBuffered(true);
            jLabel2.setFocusable(false);

            jcFechaIni.setDate(new Date());
            jcFechaIni.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
            jcFechaIni.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    jcFechaIniKeyPressed(evt);
                }
            });

            jLabel3.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
            jLabel3.setText("ID Socio:");
            jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jLabel3.setDoubleBuffered(true);
            jLabel3.setFocusable(false);

            jcFechaFin.setDate(new Date());
            jcFechaFin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
            jcFechaFin.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jcFechaFinMouseClicked(evt);
                }
            });
            jcFechaFin.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    jcFechaFinKeyPressed(evt);
                }
            });

            jLabel4.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
            jLabel4.setText("Fecha de inicio:");
            jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jLabel4.setDoubleBuffered(true);
            jLabel4.setFocusable(false);

            txtPeriodoInfo.setEditable(false);
            txtPeriodoInfo.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
            txtPeriodoInfo.setFocusable(false);
            txtPeriodoInfo.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    txtPeriodoInfoActionPerformed(evt);
                }
            });

            jLabel7.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
            jLabel7.setText("Periodo de membresia:");
            jLabel7.setFocusable(false);

            javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
            jPanel2.setLayout(jPanel2Layout);
            jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDias)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jcFechaIni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbSocios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbMembresia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jcFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPeriodoInfo)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addGap(0, 0, Short.MAX_VALUE))))
                                .addComponent(btnDias)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblDias)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel1)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(15, 15, 15)
                                    .addComponent(chkSi, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(chkNo)))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(cmbMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cmbSocios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPeriodoInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(13, 13, 13)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jcFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jcFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnDias)
                    .addGap(5, 5, 5)
                    .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(9, 9, 9)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDias)
                        .addComponent(txtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(11, 11, 11)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkSi)
                        .addComponent(chkNo)
                        .addComponent(jLabel6))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(121, 121, 121)
                            .addComponent(btnSave)
                            .addGap(18, 18, 18)
                            .addComponent(btnCancelar)))
                    .addContainerGap(12, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(26, 26, 26)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSave)
                        .addComponent(btnCancelar))
                    .addContainerGap(52, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout winMembreSociosLayout = new javax.swing.GroupLayout(winMembreSocios.getContentPane());
            winMembreSocios.getContentPane().setLayout(winMembreSociosLayout);
            winMembreSociosLayout.setHorizontalGroup(
                winMembreSociosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            winMembreSociosLayout.setVerticalGroup(
                winMembreSociosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );

            popMnuEditar.setText("Editar");
            popMnuEditar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    popMnuEditarActionPerformed(evt);
                }
            });
            PopUpmnuMembreSocio.add(popMnuEditar);

            popMnuEliminar.setText("Eliminar");
            popMnuEliminar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    popMnuEliminarActionPerformed(evt);
                }
            });
            PopUpmnuMembreSocio.add(popMnuEliminar);

            popMnuImprimir.setText("Imprimir");
            popMnuImprimir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    popMnuImprimirActionPerformed(evt);
                }
            });
            PopUpmnuMembreSocio.add(popMnuImprimir);
            PopUpmnuMembreSocio.add(jSeparator1);

            popMnuSalir.setText("Salir");
            popMnuSalir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    popMnuSalirActionPerformed(evt);
                }
            });
            PopUpmnuMembreSocio.add(popMnuSalir);

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/img/document.png"))); // NOI18N

            jPanel3.setBackground(new java.awt.Color(130, 114, 103));

            Herramientas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            Herramientas.setRollover(true);

            btnGuardar.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
            btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tarjeta-de-membresia.png"))); // NOI18N
            btnGuardar.setText("Guardar");
            btnGuardar.setFocusable(false);
            btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            btnGuardar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnGuardarActionPerformed(evt);
                }
            });
            Herramientas.add(btnGuardar);

            btnEditar.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
            btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/muscle2.png"))); // NOI18N
            btnEditar.setText("Editar");
            btnEditar.setFocusable(false);
            btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            btnEditar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnEditarActionPerformed(evt);
                }
            });
            Herramientas.add(btnEditar);

            btnEliminar.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
            btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminargym.png"))); // NOI18N
            btnEliminar.setText("Eliminar");
            btnEliminar.setFocusable(false);
            btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            btnEliminar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnEliminarActionPerformed(evt);
                }
            });
            Herramientas.add(btnEliminar);

            btnImprimir.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
            btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/impresora.png"))); // NOI18N
            btnImprimir.setText("Imprimir");
            btnImprimir.setFocusable(false);
            btnImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            btnImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            btnImprimir.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnImprimirActionPerformed(evt);
                }
            });
            Herramientas.add(btnImprimir);

            btnClose.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
            btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salida.png"))); // NOI18N
            btnClose.setText("Salir");
            btnClose.setFocusable(false);
            btnClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            btnClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            btnClose.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnCloseActionPerformed(evt);
                }
            });
            Herramientas.add(btnClose);

            jScrollPane1.setComponentPopupMenu(PopUpmnuMembreSocio);

            tblMembreSocios.setBackground(new java.awt.Color(189, 175, 145));
            tblMembreSocios.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
            tblMembreSocios.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "ID Membresia Socio", "ID Membresia", "ID Socio", "Fecha inicio", "Fecha final", "Activo"
                }
            ));
            tblMembreSocios.setComponentPopupMenu(PopUpmnuMembreSocio);
            tblMembreSocios.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tblMembreSociosMouseClicked(evt);
                }
            });
            jScrollPane1.setViewportView(tblMembreSocios);

            lbTotal.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
            lbTotal.setText("Total:");

            javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Herramientas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Herramientas, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(29, 29, 29)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lbTotal)
                    .addGap(59, 59, 59))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        String msg = validarDatos();
        if (msg.equals("")) {
            membresiasocio = new MembresiaSocios();
            membresiasocio.setIdMembresia(cmbMembresia.getSelectedIndex());
            membresiasocio.setIdSocio(cmbSocios.getSelectedIndex());
            Date date;
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            date = (Date) jcFechaIni.getDate();
            membresiasocio.setFechaIni(format.format(date));
            date = (Date) jcFechaFin.getDate();
            membresiasocio.setFechaFin(format.format(date));
            
            if (chkSi.isSelected()) {
                int si = 1;
                membresiasocio.setActivo((byte) si);
            } else {
                int no = 0;
                membresiasocio.setActivo((byte) no);
            }
            
            if (winMembreSocios.getTitle().equals("Guardar")) {
                if (gestionMembresiaSocios.insertarMembresiaSocios(membresiasocio)) {
                    if (txtPeriodoInfo.getText().equals(txtPeriodo.getText())) {
                        JOptionPane.showMessageDialog(winMembreSocios, "Membresia de socio almacenado exitosamente", "Guardar", JOptionPane.INFORMATION_MESSAGE);
                        winMembreSocios.dispose();
                        listarMembresiasSocios();
                        
                    } else {
                        JOptionPane.showMessageDialog(winMembreSocios, "Verifique si el periodo corresponde!", "Verifque", JOptionPane.ERROR_MESSAGE);
                        
                    }
                } else {
                    JOptionPane.showMessageDialog(winMembreSocios, "Error al intentar guardar membresia de socio", "Guardar", JOptionPane.ERROR_MESSAGE);
                }
                
            }
            if (winMembreSocios.getTitle().equals("Editar")) {
                if (gestionMembresiaSocios.editarMembresiaSocios(membresiasocio)) {
                    JOptionPane.showMessageDialog(winMembreSocios, "Membresia de socio editado exitosamente", "Editar", JOptionPane.INFORMATION_MESSAGE);
                    winMembreSocios.dispose();
                    listarMembresiasSocios();
                } else {
                    JOptionPane.showMessageDialog(winMembreSocios, "Error al intentar editar la membresia de socio", "Editar", JOptionPane.ERROR_MESSAGE);
                }
                
            }
            
        } else {
            JOptionPane.showMessageDialog(winMembreSocios, msg, "Validando datos", JOptionPane.INFORMATION_MESSAGE);
        }
        

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
        winMembreSocios.setSize(800, 500);
        winMembreSocios.setTitle("Guardar");
        ImageIcon img = new ImageIcon(getClass().getResource("/img/member-card.png"));
        winMembreSocios.setIconImage(img.getImage());
        limpiar();
        winMembreSocios.setLocationRelativeTo(winMembreSocios);
        winMembreSocios.setVisible(true);

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void chkNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkNoActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiasActionPerformed
        CalcularDias(jcFechaIni, jcFechaFin);
    }//GEN-LAST:event_btnDiasActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int fila = tblMembreSocios.getSelectedRow();
        if (fila != -1) {
            winMembreSocios.setSize(800, 550);
            winMembreSocios.setTitle("Editar");
            ImageIcon img = new ImageIcon(getClass().getResource("/img/member-card.png"));
            winMembreSocios.setIconImage(img.getImage());
            int idMembresiaSocio = Integer.parseInt(tblMembreSocios.getValueAt(fila, 0).toString());
            membresiasocio = gestionMembresiaSocios.buscarMembresiaSocios(idMembresiaSocio);
//            cmbMembresia.setEditable(false);
//            cmbSocios.setEditable(false);
            cmbMembresia.setSelectedItem(String.valueOf(membresiasocio.getIdMembresia()));
            cmbSocios.setSelectedItem(String.valueOf(membresiasocio.getIdSocio()));
            jcFechaIni.setDateFormatString(membresiasocio.getFechaIni());
            jcFechaFin.setDateFormatString(membresiasocio.getFechaFin());
            jcFechaIni.setEnabled(false);
            jcFechaIni.setEnabled(true);
            txtPeriodo.setFocusable(false);
            txtDias.setFocusable(false);
            lblDias.setFocusable(false);
            winMembreSocios.setLocationRelativeTo(winMembreSocios);
            winMembreSocios.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione la fila que desea editar", "editar", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void tblMembreSociosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMembreSociosMouseClicked
        if (evt.getClickCount() == 2) { //Al dar doble click
            btnEditarActionPerformed(new ActionEvent(tblMembreSocios, 0, ""));
        }
    }//GEN-LAST:event_tblMembreSociosMouseClicked

    private void popMnuEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popMnuEditarActionPerformed
        btnEditarActionPerformed(evt);
    }//GEN-LAST:event_popMnuEditarActionPerformed

    private void popMnuEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popMnuEliminarActionPerformed
        btnEliminarActionPerformed(evt);
    }//GEN-LAST:event_popMnuEliminarActionPerformed

    private void popMnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popMnuSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_popMnuSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = tblMembreSocios.getSelectedRow();
        if (fila != -1) {
            int idMembresia = Integer.parseInt(tblMembreSocios.getValueAt(fila, 0).toString());
            int idSocio = Integer.parseInt(tblMembreSocios.getValueAt(fila, 1).toString());
            int resp = JOptionPane.showConfirmDialog(rootPane, "¿Esta seguro de eliminar la membresia del socio \nCon el id membresia: " + idMembresia + "\nCon el id Socio: " + idSocio + " ?", "Eliminar", JOptionPane.YES_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                gestionMembresiaSocios.conectarBD();
                if (gestionMembresiaSocios.eliminarMembresiaSocios(idMembresia)) {
                    JOptionPane.showMessageDialog(rootPane, "Membresia de socio eliminada exitosamente", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
                    listarMembresiasSocios();
                    
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Error al intentar eliminar", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Seleccione la membresia del socio que desea eliminar", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
            }
            
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        
        gestionMembresiaSocios.cargarReporteMembresiaSocios();
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void popMnuImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popMnuImprimirActionPerformed
             

        int fila = tblMembreSocios.getSelectedRow();
        if (fila != -1) {
            int idMembreSocio = Integer.parseInt(tblMembreSocios.getValueAt(fila, 0).toString());
            int resp = JOptionPane.showConfirmDialog(rootPane, "¿Desea imprimir esta membresia socio: " + idMembreSocio +"?", "Imprimir", JOptionPane.YES_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                gestionMembresiaSocios.cargarReporteUnaMembresiaSocio(idMembreSocio);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error al intentar imprimir", "Imprimir", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione la membresia del socio que desea imprimir", "imprimir", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_popMnuImprimirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Conexion con = new Conexion();
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtPeriodoInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPeriodoInfoActionPerformed

    }//GEN-LAST:event_txtPeriodoInfoActionPerformed

    private void cmbSociosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSociosItemStateChanged

    }//GEN-LAST:event_cmbSociosItemStateChanged

    private void cmbMembresiaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMembresiaItemStateChanged
        
        if (cmbMembresia.getSelectedIndex() == 0) {
            txtPeriodo.setText("");
        } else {
            membresias = gestionMembresia.buscarMembresias(cmbMembresia.getSelectedIndex());
            txtPeriodoInfo.setText(String.valueOf(membresias.getPeriodo()));
            
        }
    }//GEN-LAST:event_cmbMembresiaItemStateChanged

    private void cmbMembresiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbMembresiaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (cmbMembresia.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Por favor escoja una membresia");
                cmbMembresia.requestFocus();
                
            } else {
                btnSave.doClick();
            }
        }
    }//GEN-LAST:event_cmbMembresiaKeyPressed

    private void cmbSociosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbSociosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (cmbSocios.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Por favor escoja un socio");
                cmbSocios.requestFocus();
                
            } else {
                btnSave.doClick();
            }
        }
    }//GEN-LAST:event_cmbSociosKeyPressed

    private void jcFechaIniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcFechaIniKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jcFechaIni.getDateFormatString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha");
                jcFechaIni.requestFocus();
                
            } else {
                btnSave.doClick();
            }
        }
    }//GEN-LAST:event_jcFechaIniKeyPressed

    private void jcFechaFinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcFechaFinMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jcFechaFinMouseClicked

    private void jcFechaFinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcFechaFinKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jcFechaFin.getDateFormatString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha");
                jcFechaFin.requestFocus();
                
            } else {
                btnSave.doClick();
            }
        }
    }//GEN-LAST:event_jcFechaFinKeyPressed

    private void txtPeriodoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPeriodoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtPeriodo.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha");
                jcFechaIni.requestFocus();
                
            } else {
                btnSave.doClick();
            }
        }
    }//GEN-LAST:event_txtPeriodoKeyPressed
    
    private void listarMembresiasSocios() {
        gestionMembresiaSocios.conectarBD();
        ResultSet rs = gestionMembresiaSocios.listarMembresiaSocios();
        if (rs != null) {
            tblMembreSocios.setModel(gestionMembresiaSocios.cargarEnTabla(rs));
            lbTotal.setText("Total: " + tblMembreSocios.getRowCount());
        }
        gestionMembresiaSocios.desconectarBD();
    }
    
    private String validarDatos() {
        
        if (cmbMembresia.getSelectedIndex() == 0) {
            cmbMembresia.requestFocus();
            return "Por favor escoja el id de membresia";
        }
        
        if (cmbSocios.getSelectedIndex() == 0) {
            cmbSocios.requestFocus();
            return "Por favor escoja el id de socio";
        }
        
        if (jcFechaIni.getDateFormatString().trim().equals("")) {
            jcFechaIni.requestFocus();
            return "Por favor elija fecha";
        }
        if (jcFechaIni.getDateFormatString().trim().equals("")) {
            jcFechaFin.requestFocus();
            return "Por favor elija fecha";
        }
        if (txtPeriodo.getText().trim().equals("")) {
            jcFechaIni.requestFocus();
            return "Por favor ingrese el periodo para confirmar";
        }
        return "";
    }
    
    public void CalcularDias(JDateChooser fechaInicio, JDateChooser fechaFinal) {
        int dias = 0;
        if (fechaInicio.getDate() != null && fechaFinal.getDate() != null) {
            Calendar inicio = fechaInicio.getCalendar();
            Calendar termina = fechaFinal.getCalendar();
            
            while (inicio.before(termina) || inicio.equals(termina)) {
                dias++;
                inicio.add(Calendar.DATE, 1);
            }
            
            txtDias.setText("Los dias transcurridos entre ambas fechas son: " + dias);
            
            if (dias == 1) {
                txtPeriodo.setText("Dia");
            } else if (dias > 1 && dias <= 8) {
                txtPeriodo.setText("Semana");
            } else if (dias > 8 && dias <= 32) {
                txtPeriodo.setText("Mes");
            } else if (dias > 33 && dias <= 64) {
                txtPeriodo.setText("Bimensual");
            } else if (dias > 62 && dias <= 93) {
                txtPeriodo.setText("Trimestral");
            } else if (dias > 93 && dias <= 186) {
                txtPeriodo.setText("Semestral");
            } else if (dias > 186 && dias <= 365) {
                txtPeriodo.setText("Anual");
            } else {
                txtPeriodo.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione las fechas");
            
        }
    }
    
    private void limpiar() {
        cmbMembresia.setSelectedIndex(0);
        cmbSocios.setSelectedIndex(0);
        txtPeriodo.setText("");
        txtPeriodoInfo.setText("");
        jcFechaIni.setDate(new Date());
        jcFechaFin.setDate(new Date());
        txtDias.setText("");
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar Herramientas;
    private javax.swing.JPopupMenu PopUpmnuMembreSocio;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDias;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnSave;
    private javax.swing.JRadioButton chkNo;
    private javax.swing.JRadioButton chkSi;
    private javax.swing.JComboBox<String> cmbMembresia;
    private javax.swing.JComboBox<String> cmbSocios;
    private javax.swing.ButtonGroup grupoActivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private com.toedter.calendar.JDateChooser jcFechaFin;
    private com.toedter.calendar.JDateChooser jcFechaIni;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JLabel lblDias;
    private javax.swing.JMenuItem popMnuEditar;
    private javax.swing.JMenuItem popMnuEliminar;
    private javax.swing.JMenuItem popMnuImprimir;
    private javax.swing.JMenuItem popMnuSalir;
    private javax.swing.JTable tblMembreSocios;
    private javax.swing.JTextField txtDias;
    private javax.swing.JTextField txtPeriodo;
    private javax.swing.JTextField txtPeriodoInfo;
    private javax.swing.JDialog winMembreSocios;
    // End of variables declaration//GEN-END:variables
}
